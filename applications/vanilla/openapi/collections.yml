openapi: 3.0.3
info:
paths:
    /collections:
        get:
            summary: List collections.
            parameters:
                - description: Filter by one or more collection IDs.
                  in: query
                  name: collectionID
                  required: false
                  schema:
                      $ref: "#/components/schemas/RangeExpression"
                - description: Filter by collection name
                  in: query
                  name: name
                  required: false
                  schema:
                      type: string
                      minLength: 1
                      maxLength: 255
                - $ref: "#/components/parameters/Page"
                - description: Desired number of collections per page.
                  in: query
                  name: limit
                  schema:
                      type: integer
                      default: 20
                      minimum: 1
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                items:
                                    $ref: "#/components/schemas/FullCollectionSchema"
                                type: array
                    description: Success
                "401":
                    $ref: "#/components/responses/PermissionError"
            tags:
                - Collections
        post:
            summary: Create new collection
            requestBody:
                content:
                    "application/json":
                        schema:
                            $ref: "#/components/schemas/CollectionPostSchema"
            responses:
                "201":
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/FullCollectionSchema"
                    description: Success.
                "401":
                    $ref: "#/components/responses/PermissionError"
                "404":
                    $ref: "#/components/responses/NotFound"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BasicError"
            tags:
                - Collections
    /collections/{id}:
        parameters:
            - description: The collection id
              in: path
              name: id
              required: true
              schema:
                  type: integer
        get:
            summary: Get a single collection.
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/FullCollectionSchema"
                    description: Success
                "401":
                    $ref: "#/components/responses/PermissionError"
                "404":
                    $ref: "#/components/responses/NotFound"
            tags:
                - Collections
        patch:
            summary: Update a collection
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Collection"
            responses:
                "200":
                    description: Success.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Collection"
                "401":
                    $ref: "#/components/responses/PermissionError"
                "404":
                    $ref: "#/components/responses/NotFound"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BasicError"
            tags:
                - Collections
        delete:
            summary: Delete a collection.
            responses:
                "204":
                    description: Success.
                "401":
                    $ref: "#/components/responses/PermissionError"
                "404":
                    $ref: "#/components/responses/NotFound"
            tags:
                - Collections
    /collections/{id}/content/{locale}:
        get:
            summary: List collection with the each record expanded
            parameters:
                - description: The collection id
                  in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                - description: Filter the records by their locale.
                  in: path
                  name: locale
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/CollectionContentSchema"
                    description: Success
                "401":
                    $ref: "#/components/responses/PermissionError"
                "404":
                    $ref: "#/components/responses/NotFound"
            tags:
                - Collections
    /collections/by-resource:
        get:
            summary: List the collections a given record belongs to.
            parameters:
                - description: The id of the record.
                  in: query
                  name: recordID
                  required: true
                  schema:
                      type: integer
                - description: The type of the record.
                  in: query
                  name: recordType
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Collection"
                    description: Success
                "401":
                    $ref: "#/components/responses/PermissionError"
                "404":
                    $ref: "#/components/responses/NotFound"
            tags:
                - Collections
        put:
            summary: Add a record to one or more collections.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                collectionIDs:
                                    description: The collections to add the record to.
                                    type: array
                                    items:
                                        type: integer
                                record:
                                    description: The record to add.
                                    type: object
                                    properties:
                                        recordID:
                                            type: integer
                                        recordType:
                                            type: string
                                        sort:
                                            type: integer
                                            nullable: true
                                    required:
                                        - recordID
                                        - recordType
                            required:
                                - collectionsIDs
                                - record
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/CollectionContentSchema"
                    description: Success
                "401":
                    $ref: "#/components/responses/PermissionError"
                "404":
                    $ref: "#/components/responses/NotFound"
            tags:
                - Collections
components:
    schemas:
        CollectionRecord:
            properties:
                recordID:
                    description: The ID of the corresponding record
                    type: integer
                recordType:
                    description: The type of the record.
                    enum:
                        - article
                        - category
                        - discussion
                        - event
                        - groups
                        - knowledgeBase
                    type: string
                sort:
                    description: Manual sort order for the group
                    nullable: true
                    type: integer
            required:
                - recordID
                - recordType
            type: object
        Collection:
            description: A collection of multiple  resources
            type: object
            properties:
                name:
                    description: Name for the collection
                    minLength: 1
                    maxLength: 255
                    type: string
                dateInserted:
                    description: When the collection was created.
                    format: date-time
                    type: string
                dateUpdated:
                    description: When the collection was last updated.
                    format: date-time
                    nullable: true
                    type: string
                insertUserID:
                    description: The unique ID of the user that created this collection.
                    type: integer
                updateUserID:
                    description: The unique ID of the user who updated this collection.
                    nullable: true
                    type: integer
                records:
                    description: An array of records that belongs to the collection.
                    items:
                        $ref: "#/components/schemas/CollectionRecord"
                    type: array
                    maxItems: 30
            required:
                - name
        CollectionPostSchema:
            allOf:
                - type: object
                  properties:
                      records:
                          description: An array of records that belongs to the collection.
                          items:
                              $ref: "#/components/schemas/CollectionRecord"
                          type: array
                          maxItems: 30
                  required:
                      - records
                - $ref: "#/components/schemas/Collection"
        FullCollectionSchema:
            allOf:
                - type: object
                  properties:
                      collectionID:
                          description: The Id of the collection.
                          type: integer
                          readOnly: true
                      records:
                          description: An array of records that belongs to the collection.
                          items:
                              $ref: "#/components/schemas/CollectionRecord"
                          type: array
                          maxItems: 30
                  required:
                      - collectionID
                      - records
                - $ref: "#/components/schemas/Collection"
        CollectionContentSchema:
            description: A collection resource with records expanded
            type: object
            properties:
                collectionID:
                    description: The Id of the collection.
                    type: integer
                    readOnly: true
                name:
                    description: Name for the collection
                    minLength: 1
                    maxLength: 255
                    type: string
                records:
                    description: An array of records that belongs to the collection.
                    items:
                        properties:
                            recordID:
                                description: The ID of the corresponding record
                                type: integer
                            recordType:
                                description: The type of the record.
                                enum:
                                    - article
                                    - category
                                    - discussion
                                    - event
                                    - groups
                                    - knowledgeBase
                                type: string
                            sort:
                                description: Manual sort order for the group
                                nullable: true
                                type: integer
                            record:
                                description: The content of the specific record
                                type: object
                                anyOf:
                                    - $ref: "../../../cloud/plugins/knowledge/openapi/articles.yml#/components/schemas/Article"
                                    - $ref: "../../vanilla/openapi/discussions.yml#/components/schemas/Discussion"
                                    - $ref: "../../vanilla/openapi/categories.yml#/components/schemas/CategorySchema"
                                    - $ref: "../../groups/openapi/groups.yml#/components/schemas/Group"
                                    - $ref: "../../groups/openapi/events.yml#/components/schemas/FullEvent"
                                    - $ref: "../../../cloud/plugins/knowledge/openapi/knowledge-bases.yml#/components/schemas/FullKnowledgeBaseSchema"
                        required:
                            - recordID
                            - recordType
                            - sort
                            - record
                        type: object
                    type: array
                    maxItems: 30
            required:
                - collectionID
                - name
                - records
